plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.ksy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// mysql
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//json
	implementation 'com.googlecode.json-simple:json-simple:1.1'

	//webClient
	implementation('org.springframework.boot:spring-boot-starter-webflux')

	// 테스트용 db
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
}

tasks.named('test') {
	useJUnitPlatform()
//	finalizedBy jacocoTestReport

}
//
//jacocoTestReport {
//	reports {
//		// html로 report 생성하기
//		// 빌드경로/jacoco/report.html 폴더 내부로 경로 설정
//		html.destination file("$buildDir/jacoco/report.html")
//	}
//
//	// jacocoTestReport가 끝나면 jacocoTestCoverageVerification 동작
//	finalizedBy 'jacocoTestCoverageVerification'
//}
//
//// jacoco 커버리지 검증 설정
//jacocoTestCoverageVerification {
//	violationRules {
//		rule {
//			element = 'CLASS'
//			// Config·DTO·Exception 패키지는 제외
//			excludes = [
//					'com.ksy.fmrs.config.*',
//					'com.ksy.fmrs.dto.*',
//					'com.ksy.fmrs.exception.*'
//			]
//
//			limit {
//				counter = 'LINE'
//				value   = 'COVEREDRATIO'
//				minimum = 0.80
//			}
//			limit {
//				counter = 'BRANCH'
//				value   = 'COVEREDRATIO'
//				minimum = 0.70
//			}
//		}
//	}
//}